version: '3.8'

services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver
    ports:
      - "8002:1433"
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_SA_PASSWORD: "tech_Chalenge123!"
    expose:
      - 1433
    volumes:
      - sqlserver-data:/var/opt/mssql
    networks:
      - techchallenge_techchallenge-network

  api:
    container_name: api
    image: ${DOCKER_REGISTRY:-}techchallengeapi
    ports:
      - "8001:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__SqlConnection=Server=sqlserver,1433;Database=TechChallenge;User Id=sa;Password=tech_Chalenge123!;TrustServerCertificate=True
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - sqlserver
    networks:
      - techchallenge_techchallenge-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - techchallenge_techchallenge-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - prometheus
    networks:
      - techchallenge_techchallenge-network

volumes:
  sqlserver-data:
  prometheus-data:
  grafana-data:

networks:
  techchallenge_techchallenge-network:
    driver: bridge
